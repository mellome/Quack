{
  "_args": [
    [
      {
        "raw": "stream-splicer@^2.0.0",
        "scope": null,
        "escapedName": "stream-splicer",
        "name": "stream-splicer",
        "rawSpec": "^2.0.0",
        "spec": ">=2.0.0 <3.0.0",
        "type": "range"
      },
      "/Users/mellome1992/LocalRepository/webtech2-blog/quackapp-frontend/src/main/angular/node_modules/labeled-stream-splicer"
    ]
  ],
  "_from": "stream-splicer@^2.0.0",
  "_hasShrinkwrap": false,
  "_id": "stream-splicer@2.0.1",
  "_location": "/stream-splicer",
  "_nodeVersion": "11.15.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/stream-splicer_2.0.1_1558694007753_0.031990716728030666"
  },
  "_npmUser": {
    "name": "goto-bus-stop",
    "email": "renee@kooi.me"
  },
  "_npmVersion": "6.9.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "stream-splicer@^2.0.0",
    "scope": null,
    "escapedName": "stream-splicer",
    "name": "stream-splicer",
    "rawSpec": "^2.0.0",
    "spec": ">=2.0.0 <3.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/labeled-stream-splicer"
  ],
  "_resolved": "https://registry.npmjs.org/stream-splicer/-/stream-splicer-2.0.1.tgz",
  "_shasum": "0b13b7ee2b5ac7e0609a7463d83899589a363fcd",
  "_shrinkwrap": null,
  "_spec": "stream-splicer@^2.0.0",
  "_where": "/Users/mellome1992/LocalRepository/webtech2-blog/quackapp-frontend/src/main/angular/node_modules/labeled-stream-splicer",
  "author": {
    "name": "James Halliday",
    "email": "mail@substack.net",
    "url": "http://substack.net"
  },
  "bugs": {
    "url": "https://github.com/browserify/stream-splicer/issues"
  },
  "dependencies": {
    "inherits": "^2.0.1",
    "readable-stream": "^2.0.2"
  },
  "description": "streaming pipeline with a mutable configuration",
  "devDependencies": {
    "JSONStream": "^1.0.4",
    "concat-stream": "^1.4.6",
    "split": "^1.0.0",
    "tape": "^4.2.0",
    "through2": "^2.0.0"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-Xizh4/NPuYSyAXyT7g8IvdJ9HJpxIGL9PjyhtywCZvvP0OPIdqyrr4dMikeuvY8xahpdKEBlBTySe583totajg==",
    "shasum": "0b13b7ee2b5ac7e0609a7463d83899589a363fcd",
    "tarball": "https://registry.npmjs.org/stream-splicer/-/stream-splicer-2.0.1.tgz",
    "fileCount": 20,
    "unpackedSize": 26116,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJc58h4CRA9TVsSAnZWagAAuqsQAKKN2K4T7bVTol+gdtgZ\nk91DGf+RZU1OWjjlRT3Nocaq+ez8VNQ2mjwg4lPUYoRt7MVV7bl/GJneqQ8I\nkxhfYtPUfbA2luyyeH76YW/KM5dlzEVWUOxxjyT2sHsGhUKJ62kLBwrsi9B7\nKBNiyR7zgHX/YM0vRarzpCMMSGrQHIQ83+eQVZXkSVfY9DraGGQvB94dQ/N1\nBkxzYeCGx/aOZfXN96czJF3Js0vt5lZ/bzhVD9UqQtYIH1HKnqEXJYxQQLx+\nxe5CX86fKCx2AQ00DUotgdF/xmnWX7d7TNc6GszRbolNLGGFXgGvHXeWQoB2\nUURlyKp1lVRxDGR04uemdEUCu5xsGq31cuG0Lf3SQUkEAUtG8dJI3r2YaCrD\nDaHDY+3BKSoRvZeFKs3uOY6THdtC2sNiOEXvMmhlpmGw8uEpFmG5ln5iI5IR\n9gl8icOcnpQMwjHjAQUdJD2yb6LXmaPMB/Z2/822iowgfhs2rCcy3W8V0nKb\n44EVPzAXg8uXBCD0UFUV1oddqm03CZLonca//Wm4NHD+QgEPoXpEzDCj5gK8\n2d/R8aZli0WHfIpl0dEYrBeMhGcWiuUia3asjfpH6o3FJr7AYftA9J7dPvlC\nqu16Vpn5oIAWvZHMqYo1SzxS0z44LJ8eoEKPw6BBzCSCesJUhfQc7yPUbcrU\n5NEC\r\n=8CxA\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "gitHead": "d11ce6d702d979d7d701de90ae783640da4cb972",
  "homepage": "https://github.com/browserify/stream-splicer",
  "keywords": [
    "stream",
    "mutable",
    "pipeline"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "ahdinosaur",
      "email": "michael.williams@enspiral.com"
    },
    {
      "name": "anandthakker",
      "email": "vestibule@anandthakker.net"
    },
    {
      "name": "ashaffer88",
      "email": "darawk@gmail.com"
    },
    {
      "name": "balupton",
      "email": "b@lupton.cc"
    },
    {
      "name": "bpostlethwaite",
      "email": "post.ben.here@gmail.com"
    },
    {
      "name": "bret",
      "email": "bcomnes@gmail.com"
    },
    {
      "name": "cwmma",
      "email": "calvin.metcalf@gmail.com"
    },
    {
      "name": "defunctzombie",
      "email": "shtylman@gmail.com"
    },
    {
      "name": "dominictarr",
      "email": "dominic.tarr@gmail.com"
    },
    {
      "name": "elnounch",
      "email": "contact@elnounch.net"
    },
    {
      "name": "emilbayes",
      "email": "github@tixz.dk"
    },
    {
      "name": "feross",
      "email": "feross@feross.org"
    },
    {
      "name": "forbeslindesay",
      "email": "forbes@lindesay.co.uk"
    },
    {
      "name": "fpereira1",
      "email": "pereira.filype@gmail.com"
    },
    {
      "name": "garann",
      "email": "garann@gmail.com"
    },
    {
      "name": "gkatsev",
      "email": "me@gkatsev.com"
    },
    {
      "name": "goto-bus-stop",
      "email": "renee@kooi.me"
    },
    {
      "name": "hughsk",
      "email": "hughskennedy@gmail.com"
    },
    {
      "name": "indutny",
      "email": "fedor@indutny.com"
    },
    {
      "name": "jmm",
      "email": "npm-public@jessemccarthy.net"
    },
    {
      "name": "jprichardson",
      "email": "jprichardson@gmail.com"
    },
    {
      "name": "jryans",
      "email": "jryans@gmail.com"
    },
    {
      "name": "leichtgewicht",
      "email": "martin.heidegger@gmail.com"
    },
    {
      "name": "lukechilds",
      "email": "lukechilds123@gmail.com"
    },
    {
      "name": "mafintosh",
      "email": "mathiasbuus@gmail.com"
    },
    {
      "name": "mattdesl",
      "email": "dave.des@gmail.com"
    },
    {
      "name": "maxogden",
      "email": "max@maxogden.com"
    },
    {
      "name": "mellowmelon",
      "email": "palmermebane@gmail.com"
    },
    {
      "name": "parshap",
      "email": "parshap+npm@gmail.com"
    },
    {
      "name": "pkrumins",
      "email": "peteris.krumins@gmail.com"
    },
    {
      "name": "sethvincent",
      "email": "sethvincent@gmail.com"
    },
    {
      "name": "stevemao",
      "email": "maochenyan@gmail.com"
    },
    {
      "name": "substack",
      "email": "substack@gmail.com"
    },
    {
      "name": "tehshrike",
      "email": "me@JoshDuff.com"
    },
    {
      "name": "terinjokes",
      "email": "terinjokes@gmail.com"
    },
    {
      "name": "thlorenz",
      "email": "thlorenz@gmx.de"
    },
    {
      "name": "ungoldman",
      "email": "ungoldman@gmail.com"
    },
    {
      "name": "yerkopalma",
      "email": "yerko.palma@usach.cl"
    },
    {
      "name": "yoshuawuyts",
      "email": "yoshuawuyts@gmail.com"
    },
    {
      "name": "zertosh",
      "email": "zertosh@gmail.com"
    }
  ],
  "name": "stream-splicer",
  "optionalDependencies": {},
  "readme": "# stream-splicer\n\nstreaming pipeline with a mutable configuration\n\nThis module is similar to\n[stream-combiner](https://npmjs.org/package/stream-combiner),\nbut with a pipeline configuration that can be changed at runtime.\n\n[![build status](https://travis-ci.org/browserify/stream-splicer.png?branch=master)](http://travis-ci.org/browserify/stream-splicer)\n\n# example\n\nThis example begins with an HTTP header parser that waits for an empty line to\nsignify the end of the header. At that point, it switches to a streaming json\nparser to operate on the HTTP body.\n\n``` js\nvar splicer = require('stream-splicer');\nvar through = require('through2');\nvar jsonStream = require('jsonstream2');\nvar split = require('split2');\n\nvar headerData = {};\nvar headers = through.obj(function (buf, enc, next) {\n    var line = buf.toString('utf8');\n    if (line === '') {\n        this.push(headerData);\n        pipeline.splice(1, 1, jsonStream.parse([ 'rows', true ]));\n    }\n    else {\n        var m = /^(\\S+):(.+)/.exec(line);\n        var key = m && m[1].trim();\n        var value = m && m[2].trim();\n        if (m) headerData[key] = value;\n    }\n    next();\n});\nvar pipeline = splicer([ split(), headers, jsonStream.stringify() ]);\nprocess.stdin.pipe(pipeline).pipe(process.stdout);\n```\n\nintput:\n\n```\nGET / HTTP/1.1\nHost: substack.net\nUser-Agent: echo\n\n{\"rows\":[\"beep\",\"boop\"]}\n```\n\noutput:\n\n```\n$ echo -ne 'GET / HTTP/1.1\\nHost: substack.net\\nUser-Agent: echo\\n\\n{\"rows\":[\"beep\",\"boop\"]}\\n' | node example/header.js\n[\n{\"Host\":\"substack.net\",\"User-Agent\":\"echo\"}\n,\n\"beep\"\n,\n\"boop\"\n]\n```\n\n# methods\n\n``` js\nvar splicer = require('stream-splicer')\n```\n\n## var pipeline = splicer(streams, opts)\n\nCreate a `pipeline` duplex stream given an array of `streams`. Each `stream`\nwill be piped to the next. Writes to `pipeline` get written to the first stream\nand data for reads from `pipeline` come from the last stream.\n\nFor example, for streams `[ a, b, c, d ]`, this pipeline is constructed\ninternally:\n\n```\na.pipe(b).pipe(c).pipe(d)\n```\n\nInput will get written into `a`. Output will be read from `d`.\n\nIf any of the elements in `streams` are arrays, they will be converted into\nnested pipelines. This is useful if you want to expose a hookable pipeline with\ngrouped insertion points.\n\n## var pipeline = splicer.obj(streams, opts)\n\nCreate a `pipeline` with `opts.objectMode` set to true for convenience.\n\n## var removed = pipeline.splice(index, howMany, stream, ...)\n\nSplice the pipeline starting at `index`, removing `howMany` streams and\nreplacing them with each additional `stream` argument provided.\n\nThe streams that were removed from the splice and returned.\n\n## pipeline.push(stream, ...)\n\nPush one or more streams to the end of the pipeline.\n\n## var stream = pipeline.pop()\n\nPop a stream from the end of the pipeline.\n\n## pipeline.unshift(stream, ...)\n\nUnshift one or more streams to the begining of the pipeline.\n\n## var stream = pipeline.shift()\n\nShift a stream from the begining of the pipeline.\n\n## var stream = pipeline.get(index, ...)\n\nReturn the stream at index `index, ...`. Indexes can be negative.\n\nMultiple indexes will traverse into nested pipelines.\n\n# attributes\n\n## pipeline.length\n\nThe number of streams in the pipeline\n\n# install\n\nWith [npm](https://npmjs.org) do:\n\n```\nnpm install stream-splicer\n```\n\n# license\n\nMIT\n",
  "readmeFilename": "readme.markdown",
  "repository": {
    "type": "git",
    "url": "git://github.com/browserify/stream-splicer.git"
  },
  "scripts": {
    "test": "tape test/*.js"
  },
  "version": "2.0.1"
}
